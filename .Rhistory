}
df.results_os_cluster = within(df.results_os_cluster,  OCT.Score <- factor(OCT.Score, levels=OCT.Score))
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:6){
df.results_os_cluster[row,col] = round(df.results_os_cluster[row,col] / df.results_os_cluster[row,6], digits=2)
}
}
melted = melt(df.results_os_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(OCT.Score, hit.rate)) +
geom_bar(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=4, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1))
}
else if(x_var == "md"){
# create data frame to house graph variables
df.results_md_cluster = data.frame("MD"=1:6, "GHT"=1:6, "FOST"=1:6, "MHPA"=1:6, "UKGTS"=1:6,  "NUM"=1:6)
df.results_md_cluster[,1] = c(">10%", "<10%", "<5%", "<2%", "<1%", "<0.5%")
for(row in 1:nrow(df.results_md_cluster)){
for(col in 2:ncol(df.results_md_cluster)){
df.results_md_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
md = df.results[pat,"MD"]
#print(md)
if(is.na(md)){
row = 1
}
else if(md == 0.005){
row = 6
}
else if(md == 0.01){
row = 5
}
else if(md == 0.02){
row = 4
}
else if(md == 0.05){
row = 3
}
else if(md == 0.1){
row = 2
}
df.results_md_cluster[row,6] = df.results_md_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_md_cluster[row,col] = df.results_md_cluster[row,col] + 1
}
}
assign("df.results_md_cluster", df.results_md_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_md_cluster)){
df.results_md_cluster[row,1] = paste0(df.results_md_cluster[row,1], "\nN=", df.results_md_cluster[row,6])
}
df.results_md_cluster = within(df.results_md_cluster,  MD <- factor(MD, levels=MD))
for(row in 1:6){
for(col in 2:6){
df.results_md_cluster[row,col] = round(df.results_md_cluster[row,col] / df.results_md_cluster[row,6], digits=2)
}
}
melted = melt(df.results_md_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(MD, hit.rate)) +
geom_histogram(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=6, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1)) +
theme_grey(base_size = 22)
}
return(plot.hist)
}
printClusteredHist(x_var = "md")
?theme_grey
#' Clustered histogram for MD and criteria results
#'
#' Print histogram where criteria (Foster, MHPA, UKGTS, and GHT) results are clustered within their MD percentiles (10, 5, 2, 1, and 0.5 %)
#' @export
printClusteredHist = function(df.results = df.best_match, x_var = "os", percentage.weight = FALSE)
{
df.results = df.best_match
if(x_var == "os"){
# create data frame to house graph variables
df.results_os_cluster = data.frame("OCT.Score"=1:4, "GHT"=1:4,"FOST"=1:4, "MHPA"=1:4, "UKGTS"=1:4,  "NUM"=1:4)
df.results_os_cluster[,1] = c("0", "4-5", "1-3","6")
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:ncol(df.results_os_cluster)){
df.results_os_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
os = df.results[pat,"OCT.Score"]
print(pat)
if(os == 0){
row = 1
}
else if(inside.range(os, c(1,3))){
row = 2
}
else if(inside.range(os, c(4,5))){
row = 3
}
else if(os == 6){
row = 4
}
df.results_os_cluster[row,6] = df.results_os_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_os_cluster[row,col] = df.results_os_cluster[row,col] + 1
}
}
assign("df.results_os_cluster", df.results_os_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_os_cluster)){
df.results_os_cluster[row,1] = paste0(df.results_os_cluster[row,1], "\nN=", df.results_os_cluster[row,6])
}
df.results_os_cluster = within(df.results_os_cluster,  OCT.Score <- factor(OCT.Score, levels=OCT.Score))
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:6){
df.results_os_cluster[row,col] = round(df.results_os_cluster[row,col] / df.results_os_cluster[row,6], digits=2)
}
}
melted = melt(df.results_os_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(OCT.Score, hit.rate)) +
geom_bar(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=4, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1))
}
else if(x_var == "md"){
# create data frame to house graph variables
df.results_md_cluster = data.frame("MD"=1:6, "GHT"=1:6, "FOST"=1:6, "MHPA"=1:6, "UKGTS"=1:6,  "NUM"=1:6)
df.results_md_cluster[,1] = c(">10%", "<10%", "<5%", "<2%", "<1%", "<0.5%")
for(row in 1:nrow(df.results_md_cluster)){
for(col in 2:ncol(df.results_md_cluster)){
df.results_md_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
md = df.results[pat,"MD"]
#print(md)
if(is.na(md)){
row = 1
}
else if(md == 0.005){
row = 6
}
else if(md == 0.01){
row = 5
}
else if(md == 0.02){
row = 4
}
else if(md == 0.05){
row = 3
}
else if(md == 0.1){
row = 2
}
df.results_md_cluster[row,6] = df.results_md_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_md_cluster[row,col] = df.results_md_cluster[row,col] + 1
}
}
assign("df.results_md_cluster", df.results_md_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_md_cluster)){
df.results_md_cluster[row,1] = paste0(df.results_md_cluster[row,1], "\nN=", df.results_md_cluster[row,6])
}
df.results_md_cluster = within(df.results_md_cluster,  MD <- factor(MD, levels=MD))
for(row in 1:6){
for(col in 2:6){
df.results_md_cluster[row,col] = round(df.results_md_cluster[row,col] / df.results_md_cluster[row,6], digits=2)
}
}
melted = melt(df.results_md_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(MD, hit.rate)) +
geom_histogram(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=6, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1)) +
theme_minimal(base_size = 22)
}
return(plot.hist)
}
?theme_grey
printClusteredHist(x_var = "md")
#' Clustered histogram for MD and criteria results
#'
#' Print histogram where criteria (Foster, MHPA, UKGTS, and GHT) results are clustered within their MD percentiles (10, 5, 2, 1, and 0.5 %)
#' @export
printClusteredHist = function(df.results = df.best_match, x_var = "os", percentage.weight = FALSE)
{
df.results = df.best_match
if(x_var == "os"){
# create data frame to house graph variables
df.results_os_cluster = data.frame("OCT.Score"=1:4, "GHT"=1:4,"FOST"=1:4, "MHPA"=1:4, "UKGTS"=1:4,  "NUM"=1:4)
df.results_os_cluster[,1] = c("0", "4-5", "1-3","6")
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:ncol(df.results_os_cluster)){
df.results_os_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
os = df.results[pat,"OCT.Score"]
print(pat)
if(os == 0){
row = 1
}
else if(inside.range(os, c(1,3))){
row = 2
}
else if(inside.range(os, c(4,5))){
row = 3
}
else if(os == 6){
row = 4
}
df.results_os_cluster[row,6] = df.results_os_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_os_cluster[row,col] = df.results_os_cluster[row,col] + 1
}
}
assign("df.results_os_cluster", df.results_os_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_os_cluster)){
df.results_os_cluster[row,1] = paste0(df.results_os_cluster[row,1], "\nN=", df.results_os_cluster[row,6])
}
df.results_os_cluster = within(df.results_os_cluster,  OCT.Score <- factor(OCT.Score, levels=OCT.Score))
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:6){
df.results_os_cluster[row,col] = round(df.results_os_cluster[row,col] / df.results_os_cluster[row,6], digits=2)
}
}
melted = melt(df.results_os_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(OCT.Score, hit.rate)) +
geom_bar(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=4, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1))
}
else if(x_var == "md"){
# create data frame to house graph variables
df.results_md_cluster = data.frame("MD"=1:6, "GHT"=1:6, "FOST"=1:6, "MHPA"=1:6, "UKGTS"=1:6,  "NUM"=1:6)
df.results_md_cluster[,1] = c(">10%", "<10%", "<5%", "<2%", "<1%", "<0.5%")
for(row in 1:nrow(df.results_md_cluster)){
for(col in 2:ncol(df.results_md_cluster)){
df.results_md_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
md = df.results[pat,"MD"]
#print(md)
if(is.na(md)){
row = 1
}
else if(md == 0.005){
row = 6
}
else if(md == 0.01){
row = 5
}
else if(md == 0.02){
row = 4
}
else if(md == 0.05){
row = 3
}
else if(md == 0.1){
row = 2
}
df.results_md_cluster[row,6] = df.results_md_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_md_cluster[row,col] = df.results_md_cluster[row,col] + 1
}
}
assign("df.results_md_cluster", df.results_md_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_md_cluster)){
df.results_md_cluster[row,1] = paste0(df.results_md_cluster[row,1], "\nN=", df.results_md_cluster[row,6])
}
df.results_md_cluster = within(df.results_md_cluster,  MD <- factor(MD, levels=MD))
for(row in 1:6){
for(col in 2:6){
df.results_md_cluster[row,col] = round(df.results_md_cluster[row,col] / df.results_md_cluster[row,6], digits=2)
}
}
melted = melt(df.results_md_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(MD, hit.rate)) +
geom_histogram(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=6, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1)) +
theme_bw(base_size = 22)
}
return(plot.hist)
}
printClusteredHist(x_var = "md")
#' Clustered histogram for MD and criteria results
#'
#' Print histogram where criteria (Foster, MHPA, UKGTS, and GHT) results are clustered within their MD percentiles (10, 5, 2, 1, and 0.5 %)
#' @export
printClusteredHist = function(df.results = df.best_match, x_var = "os", percentage.weight = FALSE)
{
df.results = df.best_match
if(x_var == "os"){
# create data frame to house graph variables
df.results_os_cluster = data.frame("OCT.Score"=1:4, "GHT"=1:4,"FOST"=1:4, "MHPA"=1:4, "UKGTS"=1:4,  "NUM"=1:4)
df.results_os_cluster[,1] = c("0", "4-5", "1-3","6")
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:ncol(df.results_os_cluster)){
df.results_os_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
os = df.results[pat,"OCT.Score"]
print(pat)
if(os == 0){
row = 1
}
else if(inside.range(os, c(1,3))){
row = 2
}
else if(inside.range(os, c(4,5))){
row = 3
}
else if(os == 6){
row = 4
}
df.results_os_cluster[row,6] = df.results_os_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_os_cluster[row,col] = df.results_os_cluster[row,col] + 1
}
}
assign("df.results_os_cluster", df.results_os_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_os_cluster)){
df.results_os_cluster[row,1] = paste0(df.results_os_cluster[row,1], "\nN=", df.results_os_cluster[row,6])
}
df.results_os_cluster = within(df.results_os_cluster,  OCT.Score <- factor(OCT.Score, levels=OCT.Score))
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:6){
df.results_os_cluster[row,col] = round(df.results_os_cluster[row,col] / df.results_os_cluster[row,6], digits=2)
}
}
melted = melt(df.results_os_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(OCT.Score, hit.rate)) +
geom_bar(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=4, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1))
}
else if(x_var == "md"){
# create data frame to house graph variables
df.results_md_cluster = data.frame("MD"=1:6, "GHT"=1:6, "FOST"=1:6, "MHPA"=1:6, "UKGTS"=1:6,  "NUM"=1:6)
df.results_md_cluster[,1] = c(">10%", "<10%", "<5%", "<2%", "<1%", "<0.5%")
for(row in 1:nrow(df.results_md_cluster)){
for(col in 2:ncol(df.results_md_cluster)){
df.results_md_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
md = df.results[pat,"MD"]
#print(md)
if(is.na(md)){
row = 1
}
else if(md == 0.005){
row = 6
}
else if(md == 0.01){
row = 5
}
else if(md == 0.02){
row = 4
}
else if(md == 0.05){
row = 3
}
else if(md == 0.1){
row = 2
}
df.results_md_cluster[row,6] = df.results_md_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_md_cluster[row,col] = df.results_md_cluster[row,col] + 1
}
}
assign("df.results_md_cluster", df.results_md_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_md_cluster)){
df.results_md_cluster[row,1] = paste0(df.results_md_cluster[row,1], "\nN=", df.results_md_cluster[row,6])
}
df.results_md_cluster = within(df.results_md_cluster,  MD <- factor(MD, levels=MD))
for(row in 1:6){
for(col in 2:6){
df.results_md_cluster[row,col] = round(df.results_md_cluster[row,col] / df.results_md_cluster[row,6], digits=2)
}
}
melted = melt(df.results_md_cluster[,1:5], variable.name = "criterion", value.name = "hit.rate")
plot.hist = ggplot(melted, aes(MD, hit.rate)) +
geom_histogram(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = hit.rate, group = criterion), size=6, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1)) +
theme_bw(base_size = 22) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
}
return(plot.hist)
}
printClusteredHist(x_var = "md")
?prop.test
printClusteredHist()
#' Clustered histogram for MD and criteria results
#'
#' Print histogram where criteria (Foster, MHPA, UKGTS, and GHT) results are clustered within their MD percentiles (10, 5, 2, 1, and 0.5 %)
#' @export
printClusteredHist = function(df.results = df.best_match, x_var = "os", percentage.weight = FALSE)
{
df.results = df.best_match
if(x_var == "os"){
# create data frame to house graph variables
df.results_os_cluster = data.frame("OCT.Score"=1:4, "GHT"=1:4,"FOST"=1:4, "MHPA"=1:4, "UKGTS"=1:4,  "NUM"=1:4)
df.results_os_cluster[,1] = c("0", "4-5", "1-3","6")
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:ncol(df.results_os_cluster)){
df.results_os_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
os = df.results[pat,"OCT.Score"]
print(pat)
if(os == 0){
row = 1
}
else if(inside.range(os, c(1,3))){
row = 2
}
else if(inside.range(os, c(4,5))){
row = 3
}
else if(os == 6){
row = 4
}
df.results_os_cluster[row,6] = df.results_os_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_os_cluster[row,col] = df.results_os_cluster[row,col] + 1
}
}
assign("df.results_os_cluster", df.results_os_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_os_cluster)){
df.results_os_cluster[row,1] = paste0(df.results_os_cluster[row,1], "\nN=", df.results_os_cluster[row,6])
}
df.results_os_cluster = within(df.results_os_cluster,  OCT.Score <- factor(OCT.Score, levels=OCT.Score))
for(row in 1:nrow(df.results_os_cluster)){
for(col in 2:6){
df.results_os_cluster[row,col] = round(df.results_os_cluster[row,col] / df.results_os_cluster[row,6], digits=2)
}
}
melted = melt(df.results_os_cluster[,1:5], variable.name = "criterion", value.name = "Hit.Rate")
plot.hist = ggplot(melted, aes(OCT.Score, Hit.Rate)) +
geom_histogram(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = Hit.Rate, group = criterion), size=6, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1)) +
theme_bw(base_size = 22) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
}
else if(x_var == "md"){
# create data frame to house graph variables
df.results_md_cluster = data.frame("MD"=1:6, "GHT"=1:6, "FOST"=1:6, "MHPA"=1:6, "UKGTS"=1:6,  "NUM"=1:6)
df.results_md_cluster[,1] = c(">10%", "<10%", "<5%", "<2%", "<1%", "<0.5%")
for(row in 1:nrow(df.results_md_cluster)){
for(col in 2:ncol(df.results_md_cluster)){
df.results_md_cluster[row,col] = 0
}
}
for(pat in 1:nrow(df.results)){
md = df.results[pat,"MD"]
#print(md)
if(is.na(md)){
row = 1
}
else if(md == 0.005){
row = 6
}
else if(md == 0.01){
row = 5
}
else if(md == 0.02){
row = 4
}
else if(md == 0.05){
row = 3
}
else if(md == 0.1){
row = 2
}
df.results_md_cluster[row,6] = df.results_md_cluster[row,6] + 1
for(col in c("GHT", "FOST", "UKGTS", "MHPA")){
#print(pat)
if(df.results[pat,col] == T)
df.results_md_cluster[row,col] = df.results_md_cluster[row,col] + 1
}
}
assign("df.results_md_cluster", df.results_md_cluster, envir = .GlobalEnv)
for(row in 1:nrow(df.results_md_cluster)){
df.results_md_cluster[row,1] = paste0(df.results_md_cluster[row,1], "\nN=", df.results_md_cluster[row,6])
}
df.results_md_cluster = within(df.results_md_cluster,  MD <- factor(MD, levels=MD))
for(row in 1:6){
for(col in 2:6){
df.results_md_cluster[row,col] = round(df.results_md_cluster[row,col] / df.results_md_cluster[row,6], digits=2)
}
}
melted = melt(df.results_md_cluster[,1:5], variable.name = "criterion", value.name = "Hit.Rate")
plot.hist = ggplot(melted, aes(MD, Hit.Rate)) +
geom_histogram(aes(fill = criterion, group = criterion), position = "dodge", stat = "identity") +
geom_text(aes(label = Hit.Rate, group = criterion), size=6, hjust=0.5, vjust=-0.5, position=position_dodge(width = 1)) +
theme_bw(base_size = 22) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
}
return(plot.hist)
}
printClusteredHist()
